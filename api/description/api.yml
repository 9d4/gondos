openapi: 3.0.0
info:
  title: Lister
  description: Save your list
  version: "0.1"
servers: 
  - url: "/" 
paths: 
  /auth/register:
    post: 
      summary: Register a new account
      operationId: authRegister
      requestBody: 
        content: 
          application/json:
            schema:
              $ref: "#/components/schemas/AuthRegisterRequest"
      responses: 
        '200':
          description: OK
          content: 
            application/json:
              schema: 
                $ref: "#/components/schemas/AuthRegisterResponse"
        '422':
          description: validation error
          content: 
            application/json:
              schema: 
                $ref: "#/components/schemas/ValidationError"
        '4xx':
          description: error
          content: 
            application/json:
              schema: 
                $ref: "#/components/schemas/Error"

  /auth/login:
    post: 
      summary: Login
      description: Returns JWT token on success
      operationId: authLogin
      requestBody: 
        content:
          application/json:
            schema: 
              $ref: "#/components/schemas/AuthLoginRequest"
      responses: 
        '200':
          description: OK
          content: 
            application/json:
              schema: 
                $ref: "#/components/schemas/AuthLoginResponse"
        '422':
          description: validation error
          content: 
            application/json:
              schema: 
                $ref: "#/components/schemas/ValidationError"
        '4xx':
          description: error
          content: 
            application/json:
              schema: 
                $ref: "#/components/schemas/Error"

  /user:
    get:
      summary: Get authenticated user
      responses: 
        '200':
          description: user
          content: 
            application/json:
              schema: 
                $ref: "#/components/schemas/User"
        '4xx':
          description: error
          content: 
            application/json:
              schema: 
                $ref: "#/components/schemas/Error"
            
  /user/lists:
    post: 
      summary: Create new list
      requestBody: 
        content: 
          application/json:
            schema: 
              $ref: "#/components/schemas/ListCreateRequest"
      responses: 
        '201':
          description: Created
        '4xx':
          description: error
          content: 
            application/json:
              schema: 
                $ref: "#/components/schemas/Error"
      

security: []
components: 
  schemas: 
    Error:
      required: [code, message]
      properties: 
        code:
          type: string
        message:
          type: string
    ValidationError:
      required: [code, message, params]
      properties: 
        code:
          type: string
        message:
          type: string 
        params:
          type: array
          items: 
            $ref: "#/components/schemas/ValidationErrorParams"
    ValidationErrorParams:
      type: object
        
    AuthRegisterRequest:
      $ref: components/schemas/auth-register-request.yml
    AuthRegisterResponse:
      $ref: components/schemas/auth-register-response.yml
    AuthLoginRequest:
      $ref: components/schemas/auth-login-request.yml
    AuthLoginResponse:
      $ref: components/schemas/auth-login-response.yml
    User:
      type: object
      required: [id, name, email, created_at, updated_at]
      properties: 
        id:
          type: integer
          x-go-type: int64
        name:
          type: string
        email:
          type: string
        created_at:
          type: string
          x-go-type: time.Time
        updated_at:
          type: string
          x-go-type: time.Time
    List:
      type: object
      required: [id, title, description, created_at, updated_at]
      properties: 
        id:
          type: integer
          x-go-type: int64
        title:
          type: string
        description:
          type: string
        created_at:
          type: string
          x-go-type: time.Time
        updated_at:
          type: string
          x-go-type: time.Time
    ListCreateRequest:
      type: object
      required: [title, description]
      properties: 
        title:
          type: string
        description:
          type: string

  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT