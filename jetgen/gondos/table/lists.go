//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var Lists = newListsTable("gondos", "lists", "")

type listsTable struct {
	mysql.Table

	// Columns
	ID          mysql.ColumnInteger
	UserID      mysql.ColumnInteger
	Title       mysql.ColumnString
	Description mysql.ColumnString
	CreatedAt   mysql.ColumnTimestamp
	UpdatedAt   mysql.ColumnTimestamp

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type ListsTable struct {
	listsTable

	NEW listsTable
}

// AS creates new ListsTable with assigned alias
func (a ListsTable) AS(alias string) *ListsTable {
	return newListsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new ListsTable with assigned schema name
func (a ListsTable) FromSchema(schemaName string) *ListsTable {
	return newListsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new ListsTable with assigned table prefix
func (a ListsTable) WithPrefix(prefix string) *ListsTable {
	return newListsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new ListsTable with assigned table suffix
func (a ListsTable) WithSuffix(suffix string) *ListsTable {
	return newListsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newListsTable(schemaName, tableName, alias string) *ListsTable {
	return &ListsTable{
		listsTable: newListsTableImpl(schemaName, tableName, alias),
		NEW:        newListsTableImpl("", "new", ""),
	}
}

func newListsTableImpl(schemaName, tableName, alias string) listsTable {
	var (
		IDColumn          = mysql.IntegerColumn("id")
		UserIDColumn      = mysql.IntegerColumn("user_id")
		TitleColumn       = mysql.StringColumn("title")
		DescriptionColumn = mysql.StringColumn("description")
		CreatedAtColumn   = mysql.TimestampColumn("created_at")
		UpdatedAtColumn   = mysql.TimestampColumn("updated_at")
		allColumns        = mysql.ColumnList{IDColumn, UserIDColumn, TitleColumn, DescriptionColumn, CreatedAtColumn, UpdatedAtColumn}
		mutableColumns    = mysql.ColumnList{UserIDColumn, TitleColumn, DescriptionColumn, CreatedAtColumn, UpdatedAtColumn}
	)

	return listsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:          IDColumn,
		UserID:      UserIDColumn,
		Title:       TitleColumn,
		Description: DescriptionColumn,
		CreatedAt:   CreatedAtColumn,
		UpdatedAt:   UpdatedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
